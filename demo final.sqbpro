<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/offic/Desktop/project/demo.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="1411"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,8:mainproject1"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="project1" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="187"/><column index="2" value="84"/><column index="3" value="122"/><column index="4" value="140"/><column index="5" value="116"/><column index="6" value="300"/><column index="7" value="67"/><column index="8" value="96"/><column index="9" value="103"/><column index="10" value="140"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="user_properties" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="3" mode="1"/></sort><column_widths><column index="1" value="213"/><column index="2" value="89"/><column index="3" value="446"/><column index="4" value="268"/><column index="5" value="211"/><column index="6" value="183"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 1">-- #Step1 converting timestamp into YYYY-MM-DD HH:MI:SS
SELECT event_date, datetime(event_timestamp / 1000000, 'unixepoch') AS timestamp,
event_name,
-- #Step2 using round numbers for user pseudo ID (assuming that an ID should be a round number)
round(user_pseudo_id) as user_pseudo_id, 
-- #Step3 extracting JSON data for user_properties column - goal is to see which experiment belongs to Control or Alternative group
-- (My biggest challenge was to try and extract all the experiment ID's at once, the issue i was facing with is the dynamic arrays of the JSON data, my solution was slower and I extracted multiple csv files that target each array number and then concated the results)
json_extract(user_properties, '$.user_properties[0].value.string_value') as belongs_to_optimize_experiment_id,
category,
country,
-- #Step4 extracting the rest of JSON data
json_extract(app_info, '$.key') as app_info,
json_extract(traffic_source, '$.name') as traffic_source_name,
json_extract(traffic_source, '$.medium') as traffic_source_medium,
json_extract(traffic_source, '$.source') as traffic_source_source

 FROM project1;</sql><current_tab id="0"/></tab_sql></sqlb_project>
